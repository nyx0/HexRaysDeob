# use this makefile to build HexRaysDeob for macOS
# based off HexRaysCodeXplorer makefile for Linux
#
# Instructions:
# download IDA SDK
# set var env IDA_SDK to the path of the SDK
# set var env IDA_DIR to the path of IDA directory
# set var env __ARM__ to 1 if running under Apple Silicon ARM
# set var env __MAC__ to 1 if running under macOS
# set var env IDAUSR to IDA plugin directory
#
# After setting up IDA SDK and Hex Rays SDK to work, in the HexRaysDeob folder
# do:
#
EXT=dylib
TARGET_EXEC := HexRaysDeob.$(EXT)
# Program for compiling C++ programs; default g++
# CFLAGS: Extra flags to give to the C compiler
# CXXFLAGS: Extra flags to give to the C++ compiler
CCXX=g++
CXXFLAGS += -D_GLIBCXX_USE_CXX11_ABI=0
CXXFLAGS += -D__ARM__
CXXFLAGS += -D__EA64__
CXXFLAGS += -D__MAC__
CXXFLAGS += -D__PLUGIN__
CXXFLAGS += -Wno-logical-op-parentheses
CXXFLAGS += -Wno-nullability-completeness
# detect potential issues with the use of va_start and other variable argument
# functions in C programs.
CXXFLAGS += -Wno-varargs
CXXFLAGS += -fPIC
CXXFLAGS += -m64
CXXFLAGS += -std=c++14
CXXFLAGS += -Wfree-nonheap-object
CXXFLAGS += -Wmismatched-new-delete
# Filtering out the warning: format specifies type 'double' but the argument
# has type 'ea_t' (aka 'unsigned long long')
CXXFLAGS += -Wno-format

LD=ld
# LDFLAGS: Extra flags to give to compilers when they are supposed to invoke the linker
LDFLAGS += -shared
LDFLAGS += -m64

LIBDIR=-L$(IDA_SDK)/lib/arm64_mac_clang_64_pro
SRCDIR=./src/
INCLUDES=-I$(IDA_SDK)/include
# No need as we should use ida64
# EA64=1

SRC=$(SRCDIR)main.cpp \
	$(SRCDIR)AllocaFixer.cpp \
	$(SRCDIR)CFFlattenInfo.cpp \
	$(SRCDIR)DefUtil.cpp \
	$(SRCDIR)HexRaysUtil.cpp \
	$(SRCDIR)MicrocodeExplorer.cpp \
	$(SRCDIR)PatternDeobfuscate.cpp \
	$(SRCDIR)PatternDeobfuscateUtil.cpp \
	$(SRCDIR)TargetUtil.cpp \
	$(SRCDIR)Unflattener.cpp
	
OBJS=$(subst .cpp,.o,$(SRC))
LIBS += -lc
LIBS += -ldl
LIBS += -lida64
LIBS += -lpthread

all: check-env clean HexRaysDeob.$(EXT)

HexRaysDeob.$(EXT): $(OBJS)
	$(CCXX) $(LDFLAGS) $(LIBDIR) -o HexRaysDeob.$(EXT) $(OBJS) $(LIBS)

%.o: %.cpp
	$(CCXX) $(CXXFLAGS) $(INCLUDES) -c $< -o $@

clean:
	rm -f $(OBJS) HexRaysDeob.$(EXT)

install: HexRaysDeob.$(EXT)
	cp -vf HexRaysDeob.$(EXT) $(IDAUSR)/plugins

check-env:
ifndef IDA_SDK
	$(error IDA_SDK is undefined)
endif
ifndef IDA_DIR
	$(error IDA_DIR is undefined)
endif
ifndef __ARM__
	$(error __ARM__ is undefined)
endif
ifndef __MAC__
	$(error __MAC__ is undefined)
endif
ifndef IDAUSR
	$(error IDAUSR is undefined)
endif
.PHONY: check-env
